const axios = require("axios");
const fs = require("fs");
const path = require("path");

module.exports.config = {
  name: "youtube",
  version: "1.0.1",
  role: 0,
  hasPrefix: false,
  aliases: ["yt", "ytsearch"],
  description: "Search and send YouTube videos via API",
  usage: "youtube [search query]",
  credits: "You",
  cooldown: 5,
};

module.exports.run = async function ({ api, event, args }) {
  const { threadID, messageID, senderID } = event;

  if (!args[0]) {
    return api.sendMessage(
      "‚ùå Please provide a search keyword.\n\nUsage: youtube [search query]",
      threadID,
      messageID
    );
  }

  const query = encodeURIComponent(args.join(" "));
  const searchURL = `https://kaiz-apis.gleeze.com/api/ytsearch?q=${query}&apikey=4fe7e522-70b7-420b-a746-d7a23db49ee5`;

  await api.sendMessage("üîç Searching YouTube, please wait...", threadID, messageID);

  try {
    const searchRes = await axios.get(searchURL);
    const results = searchRes.data.items; // ‚úÖ fetch the 'items' array

    if (!results || results.length === 0) {
      return api.sendMessage("‚ùå No videos found.", threadID, messageID);
    }

    const cacheDir = path.join(__dirname, "cache");
    if (!fs.existsSync(cacheDir)) fs.mkdirSync(cacheDir);

    for (let i = 0; i < results.length; i++) {
      const video = results[i];
      const { title, url, thumbnail, duration } = video;
      const imgPath = path.join(cacheDir, `thumb_${senderID}_${i}.jpg`);

      // Download thumbnail
      try {
        const imgRes = await axios.get(thumbnail, { responseType: "arraybuffer" });
        fs.writeFileSync(imgPath, imgRes.data);
      } catch (errThumb) {
        console.warn("Could not download thumbnail:", errThumb);
      }

      // Send video info + thumbnail
      await api.sendMessage(
        {
          body: `üé¨ Title: ${title}\n‚è± Duration: ${duration}\nüîó Link: ${url}`,
          attachment: fs.existsSync(imgPath) ? fs.createReadStream(imgPath) : null,
        },
        threadID
      );

      // Cleanup thumbnail
      if (fs.existsSync(imgPath)) fs.unlinkSync(imgPath);
    }
  } catch (error) {
    console.error("YouTube command error:", error);
    return api.sendMessage(
      "‚ùå An error occurred while searching YouTube. Please try again later.",
      threadID,
      messageID
    );
  }
};